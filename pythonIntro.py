
파이썬은 네덜란드 출신의 프로그래머인 귀도 반 로섬(Guido van Rossum)이 1989년에 개발한 프로그래밍 언어입니다.

#프로그래밍(programming)이란
특정 목적을 달성하기 위해 설계된 알고리즘(algorithm)을 프로그래밍 언어를 사용하여
구체적인 프로그램으로 작성하는 과정을 가리킵니다.
간단히 프로그래밍이란 프로그램을 만드는 모든 작업이라고 볼 수 있는 것입니다.

#프로그래밍의 순서
프로그램을 만들 때 곧바로 프로그램을 만들기 시작한다면 설계도도 없이 건물을 짓는 것과 마찬가지로 매우 어리석은 행동이 될 것입니다.
만들고자 하는 프로그램이 갖추어야 할 기능들은 어떤 것들이 있고, 또 이러한 기능들을 어떤 방식으로 구현할 것인지를
미리 생각해야만 효율적이고 좋은 프로그램을 만들 수 있습니다.

따라서 대부분의 프로그래밍은 다음과 같은 순서에 따라 진행됩니다.

1. 문제 인식
2. 프로그래 설계
3. 프로그램 구현
4. 테스트와 디버깅
5. 프로그램 유지보수

문제 인식과 프로그램 설계 단계가 프로그램의 설계도를 만드는 작업이라면, 프로그램 구현 단계는 설계도에 따라 직접 코딩(coding)을
수행하는 과정이라고 할 수 있습니다. 이후 테스트와 디버깅 단계를 통해 작성한 프로그램의 오류를 찾아 수정하여 배포할 수 있는 수준의
프로그램을 만들고, 이를 사용면서서 추가해야 되거나 수정해야 할 사항들이 있으면 유지보수하게 됩니다.

#컴퓨팅 사고력(Compytational Thinking, CT)
컴퓨팅 사고력(CT)이란 컴퓨터가 문제를 해결하는 방식처럼 복잡한 문제를 단순화하여 이를 논리적이고 효율적으로 해결하는 능력을 의미합니다.
컴퓨팅 사고력을 키우면 창의력, 사고력과 함께 문제 해결 능력까지 함께 배양할 수 있습니다.

이러한 컴퓨팅 사고력을 키우는 가장 좋은 방법 중 하나가 바로 프로그래밍이며, 코딩(coding)인 것입니다.

프로그래밍을 통해 규모가 큰 문제를 작은 문제들로 쪼개거나 문제를 구조화하고 추상화하는 방법을 터득하여 이를 다른 분야의 알반적인
문제에까지 적용할 수 있는 능력을 가지게 됩니다. 이것이 장래 희망으로 프로그래머를 목표로 하지 않는 학생들까지 모두 코딩 교육을 받게 하는
이유이자 목적인 것입니다.

#파이썬의 특징
파이써닉(pythonic)이란 '파이썬다운'이라는 의미로
파이썬 특유의 문법을 잘 활용하여 효율적이거도 간결하게 코드를 작성하는 것을 가리킵니다.
대표적인 특징
1. 파이썬은 인터프리터 언어입니다.
2. 파이썬은 문법이 쉽고 간결합니다.
3. 파이썬은 생산성이 높아 개발 속도가 빠릅니다.

#인터프리터(interpreter)언어
컴파일일러(compiler)를 사용하는 C언어나 자바와는 달리 파이썬은 인터프리터에 의해 실행되는 스크립트 언어입니다.
인터프리터(interprter)란 소스 코드를 처음부터 한 라인씩 차례대로 해석하며 실행하는 프로그램입니다.
인터프리터는 실행할 때마다 코드를 한 라인씩 바로 기계어로 변환하기 때문에 실행 속도가 컴파일러 언어에 비해 다소 느리지만,
코드가 완전히 작성되지 않아도 작성된 부분까지만을 테스트할 수 있습니다. 또한, 대화형 기능을 통해 사용자가 곧바로
코드를 수정할 수 있습니다.
#쉽고 간결한 문법
프로그래밍에서 블록(block)이란 일종의 작업공간을 의미하며, 서로 다른 블록에 작성된 코드는 서로에게 영향을 주지 않습니다.
C언어나 자바를 비롯한 대부분의 프로그래밍 언어에서는 이러한 블록(block)을 중괄호({})를 사용하여 구분하지만,
파이썬에서는 소스 코드의 들여쓰기로 구분합니다. 이는 다른 언어들과 구분되는 파이썬만이 가지는 독특한 특징 중 하나로,
파이썬에서는 들여쓰기가 달라지면 다른 블록으로 인식하는 것입니다.

이과 같은 방식은 같은 동작을 수행하는 코드가 좀 더 정렬된 한 가지 모습으로 보이므로, 다른 사람이 작성한 코드를 좀 더 쉽게
읽을 수 있습니다. 또한, 파이썬의 문법은 코드를 매우 쉽고 간결하게 작성할 수 있도록 되어 있어 배우기도 쉽고 활용하기도 쉬운 언어입니다.
#높은 생산성과 빠른 개발 속도
파이썬은 다양한 자료형을 제공해 줄 뿐만 아니라 다른 사람이 제작한 다양한 라이브러리를 사용할 수 있기 때문에
매우 빠르게 원하는 프로그램을 작성할 수 있습니다.

또한, 파이썬은 접착(glue) 언어라고도 불리며 다른 프로그래밍 언어와 쉽게 결합하여 사용할 수 있는 장점을 가지고 있습니다.
C언어나 C++에서도 쉽게 사용할 수 있습니다. 따라서 빠른 속도가 중요한 입출력이나 하드웨어 제어와 관련된 부분은 C언어로 작성하고
나머지 부분은 파이썬으로 작성하는 등 파이썬을 사용하면 생산성을 크게 높일 수 있습니다.
"Life is too short, You need Python."
"인생은 너무나도 짧다, 그래서 파이썬이 필요하다"
